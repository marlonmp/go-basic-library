// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BooksColumns holds the columns for the "books" table.
	BooksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 60},
		{Name: "pages", Type: field.TypeUint16},
		{Name: "abstract", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "category", Type: field.TypeEnum, Enums: []string{"Action", "Adventure", "Fiction", "Science"}},
		{Name: "cover_url", Type: field.TypeString},
		{Name: "user_books", Type: field.TypeUUID},
	}
	// BooksTable holds the schema information for the "books" table.
	BooksTable = &schema.Table{
		Name:       "books",
		Columns:    BooksColumns,
		PrimaryKey: []*schema.Column{BooksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "books_users_books",
				Columns:    []*schema.Column{BooksColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Restrict,
			},
		},
	}
	// BookLoansColumns holds the columns for the "book_loans" table.
	BookLoansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "loan_date", Type: field.TypeTime},
		{Name: "delivery_date", Type: field.TypeTime},
		{Name: "book_on_loans", Type: field.TypeUUID},
		{Name: "user_loans", Type: field.TypeUUID},
	}
	// BookLoansTable holds the schema information for the "book_loans" table.
	BookLoansTable = &schema.Table{
		Name:       "book_loans",
		Columns:    BookLoansColumns,
		PrimaryKey: []*schema.Column{BookLoansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "book_loans_books_on_loans",
				Columns:    []*schema.Column{BookLoansColumns[5]},
				RefColumns: []*schema.Column{BooksColumns[0]},
				OnDelete:   schema.Restrict,
			},
			{
				Symbol:     "book_loans_users_loans",
				Columns:    []*schema.Column{BookLoansColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Restrict,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "first_name", Type: field.TypeString, Size: 45},
		{Name: "last_name", Type: field.TypeString, Size: 45},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 60},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BooksTable,
		BookLoansTable,
		UsersTable,
	}
)

func init() {
	BooksTable.ForeignKeys[0].RefTable = UsersTable
	BookLoansTable.ForeignKeys[0].RefTable = BooksTable
	BookLoansTable.ForeignKeys[1].RefTable = UsersTable
}
